name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REL: release-${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure rsync present
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Trust host key
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create release dirs on server
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
            "mkdir -p /opt/app/releases/${REL}/{backend,frontend}"

      - name: Upload backend (rsync)
        run: |
          rsync -avz --delete \
            --exclude '.git' --exclude 'node_modules' --exclude 'dist' \
            --exclude '.env*' --exclude '*firebase*.json' --exclude 'cookies.txt' \
            backend/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/app/releases/${REL}/backend/

      - name: Upload frontend (rsync)
        run: |
          rsync -avz --delete \
            --exclude '.git' --exclude 'node_modules' --exclude 'dist' \
            frontend/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/app/releases/${REL}/frontend/

      - name: Build & switch on server
        env:
          VITE_API_BASE: ${{ vars.VITE_API_BASE }}
          VITE_FIREBASE_API_KEY: ${{ vars.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ vars.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ vars.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_APP_ID: ${{ vars.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ vars.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ vars.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ vars.VITE_FIREBASE_MEASUREMENT_ID }}
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -se' <<'REMOTE'
          set -euo pipefail
          REL="${{ env.REL }}"

          # --- Backend ---
          cd /opt/app/releases/$REL/backend
          npm ci
          npm run build

          # Point stable symlink & restart API (unit should use /etc/app/backend.env)
          sudo ln -sfn /opt/app/releases/$REL/backend /opt/app/current-backend
          sudo systemctl restart app-backend
          sleep 1

          # --- Frontend ---
          cd /opt/app/releases/$REL/frontend
          cat > .env.production <<ENV
          VITE_API_BASE=${VITE_API_BASE}
          VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
          VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}
          VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
          VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
          VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}
          VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}
          VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID}
          ENV
          npm ci
          npm run build
          sudo rsync -av --delete dist/ /var/www/app/

          # Health checks
          curl -sf https://api.agilehostile.com/api/health >/dev/null
          curl -sf https://app.agilehostile.com >/dev/null
          REMOTE
