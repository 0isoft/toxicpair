name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REL: release-${{ github.run_id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create release dirs on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            set -e
            sudo mkdir -p /opt/app/releases && sudo chown ubuntu:ubuntu /opt/app/releases
            mkdir -p /opt/app/releases/${{ env.REL }}/backend
            mkdir -p /opt/app/releases/${{ env.REL }}/frontend

      - name: Upload backend via rsync (with excludes)
        uses: appleboy/rsync-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "backend/"
          target: "/opt/app/releases/${{ env.REL }}/backend/"
          args: "-avz --delete --exclude '.git' --exclude 'node_modules' --exclude 'dist' --exclude '.env*' --exclude '*firebase*.json' --exclude 'cookies.txt'"

      - name: Upload frontend via rsync (with excludes)
        uses: appleboy/rsync-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "frontend/"
          target: "/opt/app/releases/${{ env.REL }}/frontend/"
          args: "-avz --delete --exclude '.git' --exclude 'node_modules' --exclude 'dist'"

      - name: Build & switch on server
        uses: appleboy/ssh-action@v1.0.3
        env:
          VITE_API_BASE: ${{ vars.VITE_API_BASE }}
          VITE_FIREBASE_API_KEY: ${{ vars.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ vars.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ vars.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_APP_ID: ${{ vars.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ vars.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ vars.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_MEASUREMENT_ID: ${{ vars.VITE_FIREBASE_MEASUREMENT_ID }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          command_timeout: 30m
          script: |
            set -e
            REL="${{ env.REL }}"

            # Backend build
            cd /opt/app/releases/$REL/backend
            npm ci
            npm run build

            # Flip symlink & restart API (service already reads /etc/app/backend.env)
            sudo ln -sfn /opt/app/releases/$REL/backend /opt/app/current-backend
            sudo systemctl restart app-backend
            sleep 1

            # Frontend build (inject prod env)
            cd /opt/app/releases/$REL/frontend
            cat > .env.production <<'ENV'
            VITE_API_BASE=${VITE_API_BASE}
            VITE_FIREBASE_API_KEY=${VITE_FIREBASE_API_KEY}
            VITE_FIREBASE_AUTH_DOMAIN=${VITE_FIREBASE_AUTH_DOMAIN}
            VITE_FIREBASE_PROJECT_ID=${VITE_FIREBASE_PROJECT_ID}
            VITE_FIREBASE_APP_ID=${VITE_FIREBASE_APP_ID}
            VITE_FIREBASE_STORAGE_BUCKET=${VITE_FIREBASE_STORAGE_BUCKET}
            VITE_FIREBASE_MESSAGING_SENDER_ID=${VITE_FIREBASE_MESSAGING_SENDER_ID}
            VITE_FIREBASE_MEASUREMENT_ID=${VITE_FIREBASE_MEASUREMENT_ID}
            ENV
            npm ci
            npm run build
            sudo rsync -av --delete dist/ /var/www/app/

            # Health checks
            curl -sf https://api.agilehostile.com/api/health >/dev/null
            curl -sf https://app.agilehostile.com >/dev/null

      - name: Done
        run: echo "Deployed $REL"
